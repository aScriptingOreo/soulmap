networks:
  proxy:
    external: true
  grafana-edge_monitoring:
    external: true

services:
  # Production service using pre-built image
  devsm:
    # image: soulmap-client:latest
    build:
      context: ./client/.
      dockerfile: Dockerfile
    container_name: devsm-client
    entrypoint: []  # This will override any ENTRYPOINT from the image
    command: bun dev
    volumes:
      - ./client/:/app
      - /app/node_modules
      - /app/dist
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - DOMAIN=${DOMAIN}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_API_HOST=${VITE_API_HOST}
      - SERVER_PORT=${SERVER_PORT}
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - proxy
      - default
    restart: always
    labels:
      # Basic Traefik config - just expose the Vite dev server
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      
      # Single service for the Vite dev server
      - "traefik.http.services.devsm.loadbalancer.server.port=${CLIENT_PORT}"
      
      # Simple HTTP router - no SSL, no redirects - FOR THE MAIN APP
      - "traefik.http.routers.devsm.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.devsm.entrypoints=https"
      - "traefik.http.routers.devsm.tls.certresolver=letsencrypt"
      - "traefik.http.routers.devsm.tls=true"

    depends_on:
      devsm-pg:
        condition: service_healthy
      devsmapi: 
        condition: service_started

  devsmapi:
    build:
      context: ./server/.
      dockerfile: Dockerfile
    container_name: devsm-api
    command: bun run dev
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SERVER_PORT=${SERVER_PORT}
      - DOMAIN=${DOMAIN}
      - PORT=${SERVER_PORT}  # Ensure the PORT env var is set for the server
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_BOT_ID=${DISCORD_BOT_ID}
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - DISCORD_CHANNEL_ID=${DISCORD_CHANNEL_ID}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}
      - DISCORD_SERVER_ID=${DISCORD_SERVER_ID} 
      - DISCORD_ADMIN_ROLE_ID=${DISCORD_ADMIN_ROLE_ID}
      - DISCORD_MANAGER_ROLE_ID=${DISCORD_MANAGER_ROLE_ID}
      - DISCORD_CONTRIBUTOR_ROLE_ID=${DISCORD_CONTRIBUTOR_ROLE_ID}
      - ADMIN_API_TOKEN=${ADMIN_API_TOKEN}
      - NODE_ENV=development
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - proxy
      - default
    labels:
      # Basic Traefik config
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      
      # Service definition for the API
      - "traefik.http.services.smapi.loadbalancer.server.port=${SERVER_PORT}"
      
      # Router configuration for the API
      - "traefik.http.routers.smapi.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.smapi.entrypoints=https"
      - "traefik.http.routers.smapi.tls.certresolver=letsencrypt"
      - "traefik.http.routers.smapi.tls=true"
    restart: always

  devsm-admin:
    build:
      context: ./admin/.
      dockerfile: Dockerfile
    container_name: devsm-admin
    environment:
      - NODE_ENV=development
      - VITE_ADMIN_API_TOKEN=${ADMIN_API_TOKEN:-dev-token}
      - API_URL=http://${VITE_API_HOST}:${SERVER_PORT:-3000}
      - VITE_DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - VITE_REDIRECT_URI=https://${DOMAIN}/admin/auth/callback
      - VITE_SERVER_ID=${DISCORD_SERVER_ID}
      - VITE_ADMIN_ROLE_ID=${DISCORD_ADMIN_ROLE_ID}
      - VITE_MANAGER_ROLE_ID=${DISCORD_MANAGER_ROLE_ID}
      - VITE_CONTRIBUTOR_ROLE_ID=${DISCORD_CONTRIBUTOR_ROLE_ID}
      - DOMAIN=${DOMAIN}
      - VITE_DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    volumes:
      - ./admin:/app
      - /app/node_modules
    networks:
      - proxy
      - default
    restart: always
    #ports:
    #  - "5175:5173"  # Vite dev server port
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
    
      # Service definition for admin panel (Vite dev server)
      - "traefik.http.services.devsm-admin.loadbalancer.server.port=5173"
    
      # Router for the admin panel at /admin path
      - "traefik.http.routers.devsm-admin.rule=Host(`${DOMAIN}`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.devsm-admin.entrypoints=https"
      - "traefik.http.routers.devsm-admin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.devsm-admin.tls=true"
      
      # Critical: Add middleware for header pass-through and preserving the original request path
      - "traefik.http.routers.devsm-admin.middlewares=devsm-admin-auth-headers@docker"
      - "traefik.http.middlewares.devsm-admin-auth-headers.headers.customRequestHeaders.X-Forwarded-Prefix=/admin"
      - "traefik.http.middlewares.devsm-admin-auth-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.devsm-admin-auth-headers.headers.customRequestHeaders.X-Forwarded-Host=${DOMAIN}"

  devsm-pg:
    image: postgres:latest
    container_name: devsm-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - 5465:5432
    networks:
      - default
      - grafana-edge_monitoring
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s